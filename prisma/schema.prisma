generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model product {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at            DateTime                @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?               @db.Timestamptz(6)
  name                  String
  description           String
  price                 Float                   @db.Real
  status                PRODUCT_STATUS
  slug                  String                  @unique
  code                  String
  category_id           String                  @db.Uuid
  bag                   bag[]
  category              category                @relation(fields: [category_id], references: [id], onDelete: Cascade)
  product_variant_color product_variant_color[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model product_variant_color {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?              @db.Timestamptz(6)
  color                String
  images               String[]
  product_id           String                 @db.Uuid
  bag                  bag[]
  product              product                @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_variant_size product_variant_size[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model product_variant_size {
  id                       String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at               DateTime              @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?             @db.Timestamptz(6)
  size                     PRODUCT_SIZES
  stock                    Int
  status                   SIZE_STATUS
  product_variant_color_id String                @db.Uuid
  bag                      bag[]
  product_variant_color    product_variant_color @relation(fields: [product_variant_color_id], references: [id], onDelete: Cascade)
  wishlist                 wishlist[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model category {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  name       String
  slug       String
  product    product[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bag {
  id                       String                @id(map: "cart_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at               DateTime              @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?             @db.Timestamptz(6)
  quantity                 Int
  product_id               String                @db.Uuid
  product_variant_size_id  String                @db.Uuid
  customer_id              String                @db.Uuid
  product_variant_color_id String                @db.Uuid
  customer                 customer              @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  product_variant_color    product_variant_color @relation(fields: [product_variant_color_id], references: [id], onDelete: Cascade)
  product                  product               @relation(fields: [product_id], references: [id], onDelete: Cascade, map: "cart_product_id_fkey")
  product_variant_size     product_variant_size  @relation(fields: [product_variant_size_id], references: [id], onDelete: Cascade, map: "cart_product_variant_size_fkey")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @db.Timestamptz(6)
  email      String     @unique
  address    address[]
  bag        bag[]
  wishlist   wishlist[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wishlist {
  id                      String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at              DateTime             @default(now()) @db.Timestamptz(6)
  customer_id             String               @db.Uuid
  product_variant_size_id String               @db.Uuid
  customer                customer             @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  product_variant_size    product_variant_size @relation(fields: [product_variant_size_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model address {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  house_number String
  street       String
  barangay     String
  municipality String
  province     String
  zip_code     String
  is_default   Boolean   @default(false)
  customer_id  String    @db.Uuid
  customer     customer  @relation(fields: [customer_id], references: [id], onDelete: Cascade)
}

enum SIZE_STATUS {
  AVAILABLE
  LOW_OF_STOCK
  OUT_OF_STOCK
}

enum PRODUCT_STATUS {
  ACTIVE
  DISCONTINUED
  ARCHIVED
}

enum PRODUCT_SIZES {
  XS
  S
  M
  L
  XL
  XXL
}
